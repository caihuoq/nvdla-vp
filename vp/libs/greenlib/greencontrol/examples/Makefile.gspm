#
# This Makefile is included from the Makefiles that are inside the examples
#

SHELL = /bin/bash

# Test for MODULE variable
ifeq ($(strip $(MODULE)),)
  $(error ERROR Variable MODULE must be defined by the Makefile that includes this one)
endif

# Test for SRCS variable
ifeq ($(strip $(SRCS)),)
  $(error ERROR Variable SRCS must be defined by the Makefile that includes this one)
endif

# Test if the GSPM world is loaded
ifneq ($(strip $(GSROOT)),)

  # error if scv is requested but not loaded at the primary shell
  ifneq ($(filter $(BUILD_DEPENDS), scv),)
  ifeq ($(strip $(SCV)),)
    $(error This example requires the scv package loaded at primary shell, to handle dynamic libraries. Run manually 'gs-use scv'. Sorry)
  endif
  endif

  BUILD_DEPENDS += gsc systemc greenbus
  gsc_build:
#	#verify build depends: $(sort $(BUILD_DEPENDS))  #sort only to remove duplicates
	@unset MISSING; \
        for DEP in $(sort $(BUILD_DEPENDS)); do \
          if test $$(echo $${LOADEDMODULES}. | sed "s/^$$DEP.*\|.*:$$DEP.*/found/") != "found"; then MISSING+="$$DEP "; fi; \
        done; \
        if test "$$MISSING"; then \
          : define as gsuse because gs-use is invalid in sh; \
          gsuse () { source $$GSROOT/gspm.bashrc; }; \
          echo "gs-use $$MISSING"; \
          gsuse $$MISSING; \
          if test $$? -ne 0; then exit 1; fi; \
        fi; \
        COMMAND="gsc -I../../include -I../../../include -o $(MODULE).x $(CFLAGS) $(SRCS) $(EXTRA_LIBS)"; \
        echo $$COMMAND; $$COMMAND;

else

  # Warn the user
  ifneq ($(MAKECMDGOALS),clean)
    $(warning Using the directories hard-coded in the Makefile.defs file)
    $(warning If the compilation does not work, try to edit Makefile.defs)
  endif

endif
